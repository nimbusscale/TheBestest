AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Stack for TheBestest App
Resources:
  api:
    Type: AWS::Serverless::Api
    Properties:
      Name: TheBestest
      StageName: dev
      DefinitionUri: ./api.yaml
      Variables:
        GetItemsByUserFunction: !Ref getItemsByUserFunction
  userPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: thebestest-userpool
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireUppercase: false
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
  adminClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: thebestest-adminclient
      UserPoolId: !Ref userPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
  lambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BestestDbAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:GetRecords
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${itemTable}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  itemTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: thebestest_items
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: category_name
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: category_name
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  getItemsByUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get_items_by_user.lambda_handler
      Runtime: python3.6
      CodeUri: ./functions/get_items_by_user
      Role: !GetAtt lambdaRole.Arn
      Environment:
        Variables:
          itemsTableName: !Ref itemTable
      Events:
        ApiGw:
          Type: Api
          Properties:
            Path: /items
            Method: GET
            RestApiId: !Ref api
