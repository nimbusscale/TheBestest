AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Stack for TheBestest App"
Resources:
  API:
    Type: "AWS::Serverless::Api"
    Properties:
      Name: "TheBestest"
      StageName: "dev"
      DefinitionUri: "./api.yaml"
      Variables:
        GetItemsByUserFunction: !Ref GetItemsByUserFunction
  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "BestestDbAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:BatchGetItem"
                  - "dynamodb:BatchWriteItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:GetRecords"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
                  - "dynamodb:UpdateItem"
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ItemTable}
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  ItemTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: "items"
      KeySchema:
        - AttributeName: "user_id"
          KeyType: "HASH"
        - AttributeName: "category_name"
          KeyType: "RANGE"
      AttributeDefinitions:
        - AttributeName: "user_id"
          AttributeType: "S"
        - AttributeName: "category_name"
          AttributeType: "S"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
  GetItemsByUserFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: "get_items_by_user.lambda_handler"
      Runtime: "python3.6"
      CodeUri: "./functions/get_items_by_user"
      Role: !GetAtt LambdaRole.Arn
      Events:
        ApiGw:
          Type: "Api"
          Properties:
            Path: "/items"
            Method: "GET"
            RestApiId: !Ref API
