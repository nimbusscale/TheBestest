AWSTemplateFormatVersion: 2010-09-09
Description: Manages the flow through the pipeline for TheBestest App
Parameters:
  OAuthToken:
    Type: String
Resources:
  PipelineMgrLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: pipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub
                  -  arn:aws:s3:::${PipelineBucket}/*
                  - { PipelineBucket: !ImportValue TheBestest-PipelineBucket }
              - Effect: Allow
                Action:
                  - apigateway:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - codepipeline:GetPipeline
                  - codepipeline:GetPipelineState
                  - codepipeline:StartPipelineExecution
                  - codepipeline:GetPipelineExecution
                Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  TestMgr:
    Type: AWS::Lambda::Function
    Properties:
      # functions_deploy is a temp location created by the
      # deploy_pipeline.infra.sh script
      Code: functions_deploy/pipeline_mgr
      Handler: pipeline_mgr.test
      Role: !GetAtt PipelineMgrLambdaRole.Arn
      Runtime: python3.6

